<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="zwave"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
  xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0
                      https://openhab.org/schemas/thing-description/v1.0.0">

  <thing-type id="eco_dwzwave25_00_000" listed="false">
    <label>DWZWAVE25 Z-Wave Door/Window Sensor</label>
    <description><![CDATA[
Z-Wave Door/Window Sensor<br /><h1>Overview</h1><p>Z-Wave+ enabled device which provides open/closed position status</p> <p>Transmits open/closed status</p> <p>Reports tamper condition when cover is open</p> <br /><h2>Inclusion Information</h2><p>Start by placing the controller into inclusion mode.</p> <p>Activate inclusion mode for the sensor by removing the plastic pull-tab from the back of the sensor. When the inclusion process in complete, the LED on the sensor will be solid blue, then go out.</p> <p>Test the sensor. Place the magnet next to the sensor to represent a closed position (see Installation section to see where to position the magnet). If the LED flashes ONE TIME, it is successfully communicating on your Zwave network. If the LED on the sensor flashes slow and steady for 5 seconds, you need to repeat the inclusion process.</p> <p>Notes:</p> <p>If you need to repeat the inclusion process, repeat STEP ONE above, then for STEP TWO you will need to simply remove the cover of the sensor, remove the battery for 10 seconds, reinsert the battery, and replace the sensor cover. This will re-enter the sensor in inclusion mode.</p> <p>This sensor also supports Network Wide Inclusion such that the Sensor can be included into the Z-Wave network over the mesh network and not directly near the main controller. This mode is automatically activated after regular inclusion was not successful.</p> <br /><h2>Exclusion Information</h2><p>Exclusion mode on the sensor is initiated following the same exact procedure as inclusion.</p> <br /><h2>Wakeup Information</h2><p>The sensor will wake up every so often and when the case is closed to send a Wake-Up Notification to allow the life line master node controller that the sensor is now available for any queued messages that the controller may have for the sensor. The time between Wake-Up Notifications can be configured with the Wake- Up Notification command class to be between 1 hour and 1 week with interval steps of 200 seconds.</p> <p>To save power, this sensor sleeps most of the time and is therefore not awake to receive messages from a gateway for testing. Removing the top case from the sensor will put in device into a tampered mode in which the sensor will stay awake and able to receive messages. Most of the time an end user would not do this, but if the sensor needs to be configured after inclusion, an end user can follow the instructions below for sending Wake-Up notifications.</p>
    ]]></description>
    <category>Door</category>

    <!-- CHANNEL DEFINITIONS -->
    <channels>
      <channel id="sensor_binary" typeId="sensor_binary">
        <label>Binary Sensor</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SENSOR_BINARY</property>
        </properties>
      </channel>
      <channel id="alarm_tamper" typeId="alarm_tamper">
        <label>Alarm (tamper)</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_ALARM;type=ACCESS_CONTROL</property>
        </properties>
      </channel>
      <channel id="sensor_door" typeId="sensor_door">
        <label>Sensor (Binary)</label>
        <properties>
          <property name="binding:*:OpenClosedType">COMMAND_CLASS_ALARM</property>
        </properties>
      </channel>
      <channel id="alarm_power" typeId="alarm_power">
        <label>Alarm (power)</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_ALARM;type=POWER_MANAGEMENT</property>
        </properties>
      </channel>
      <channel id="battery-level" typeId="system.battery-level">
        <properties>
          <property name="binding:*:PercentType">COMMAND_CLASS_BATTERY</property>
        </properties>
      </channel>
    </channels>

    <!-- DEVICE PROPERTY DEFINITIONS -->
    <properties>
      <property name="vendor">Ecolink</property>
      <property name="modelId">DWZWAVE25</property>
      <property name="manufacturerId">014A</property>
      <property name="manufacturerRef">0004:0002</property>
      <property name="dbReference">947</property>
      <property name="defaultAssociations">1</property>
    </properties>

    <!-- CONFIGURATION DESCRIPTIONS -->
    <config-description>

      <!-- GROUP DEFINITIONS -->
      <parameter-group name="configuration">
        <context>setup</context>
        <label>Configuration Parameters</label>
      </parameter-group>

      <parameter-group name="association">
        <context>link</context>
        <label>Association Groups</label>
      </parameter-group>

      <!-- PARAMETER DEFINITIONS -->
      <parameter name="config_1_1" type="integer" groupName="configuration">
        <label>1: Send Basic Set</label>
        <description><![CDATA[
Send Basic Set to Association Group 2<br /><h1>Overview</h1><p>Configures the sensor to send or not send Basic Set commands of 0x00 to nodes in Association group 2 turning the devices off when the sensor is in a restored state i.e. the door is closed. By default the sensor does NOT send Basic Set commands of 0x00.</p>
        ]]></description>
        <default>0</default>
        <options>
          <option value="0">Don't Send Basic Set</option>
          <option value="255">Send Basic Set</option>
        </options>
      </parameter>

      <parameter name="config_2_1" type="integer" groupName="configuration">
        <label>2: Send Sensor Binary Report</label>
        <description><![CDATA[
Send Sensor Binary Report to Association Group 1<br /><h1>Overview</h1><p>Configures the sensor to either to send or not to send Sensor Binary Report commands to Association Group 1 when the sensor is faulted and restored. If the controller is fully compatible with the Notification Command Class thereby making the Sensor Binary Reports redundant, the controller can disable the Sensor Binary Report Commands completely.</p>
        ]]></description>
        <default>0</default>
        <options>
          <option value="0">Send Sensor Binary Report</option>
          <option value="255">Don't Send Binary Sensor Report</option>
        </options>
      </parameter>

      <!-- ASSOCIATION DEFINITIONS -->
      <parameter name="group_1" type="text" groupName="association" multiple="true">
        <label>1: Lifeline</label>
        <description><![CDATA[
<br /><h1>Overview</h1> <p>Receive unsolicited messages relating to door/window open/close notifications, case tampering notifications, low-battery notifications, and sensor binary reports.</p>
        ]]></description>
        <multipleLimit>5</multipleLimit>
      </parameter>

      <parameter name="group_2" type="text" groupName="association" multiple="true">
        <label>2: Control</label>
        <description><![CDATA[
Group to receive Basic Set<br /><h1>Overview</h1> <p>Intended for devices that are to be controlled i.e. turned on or off (on only by default) with a Basic Set. </p>
        ]]></description>
        <multipleLimit>5</multipleLimit>
      </parameter>

      <!-- STATIC DEFINITIONS -->
      <parameter name="node_id" type="integer" min="1" max="232" readOnly="true" required="true">
        <label>Node ID</label>
        <advanced>true</advanced>
      </parameter>

    </config-description>

  </thing-type>

</thing:thing-descriptions>
