<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="zwave"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
  xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0
                      https://openhab.org/schemas/thing-description/v1.0.0">

  <thing-type id="qubino_zmnhad_00_000" listed="false">
    <label>ZMNHAD Flush 1 relay</label>
    <description><![CDATA[
Flush 1 relay<br /><h1>Overview</h1><p>This Z-Wave module is used for switching on or off the electrical device (e.g. light or fan). The module can be controlled either through Z-wave network or through the wall switch. The module is designed to be mounted inside a “flush mounting box”, hidden behind a traditional wall switch. Module measures power consumption of electrical device and supports connection of digital temperature sensor. It is designed to act as repeater in order to improve range and stability of Z-wave network. Supported switches Module supports mono-stable switches (push button) and bi-stable switches. The module is factory set to operate with bi-stable switches.</p> <br /><h2>Inclusion Information</h2><p><b>Module Inclusion (Adding to Z-Wave network)</b></p> <ul><li>Connect module to power supply (with temperature sensor connected -if purchased)</li> <li>Enable add/remove mode on main controller</li> <li>Auto-inclusion (works forabout 5 seconds after connected to power supply) or</li> <li>Press push button I1 three times within 3s (3 times change switch state within 3 seconds) or</li> <li>Press service button <b>S</b> (only applicable for 24 V SELV supply voltage) for more than 2 seconds.</li> </ul><p><strong>NOTE1:</strong> For auto-inclusion procedure, first set main controller into inclusion mode and then connect module to power supply.</p> <p><strong>NOTE2:</strong> When connecting temperature sensor to module that has already been included, you have to exclude module first. Switch off power supply , connect the sensor and re-include the module.</p> <br /><h2>Exclusion Information</h2><p><b>Module Exclusion/Reset (Removing from Z-Wavenetwork)</b></p> <ul><li>Connect module to power supply</li> <li>Bring module within maximum 1 meter (3 feet) of the main controller,</li> <li>Enable add/remove mode on main controller,</li> <li>Press push button <b>I1 </b>five times within 3s (5 times change switch state within 3 seconds) in the first 60 seconds after the module is connected to the power supply or</li> <li>Press service button <b>S </b>(only applicable for 24 V SELV supply voltage) for more than 6 seconds.</li> </ul><p>By this function all parameters of the module are set to default values and own ID is deleted.</p> <p>If push button I1 is pressed three times within 3s (or service button S is pressed more than 2 and less than 6 seconds) module is excluded, but configuration parameters are not set to default values.</p>
    ]]></description>
    <category>WallSwitch</category>

    <!-- CHANNEL DEFINITIONS -->
    <channels>
      <channel id="switch_binary" typeId="switch_binary">
        <label>Switch</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SWITCH_BINARY,COMMAND_CLASS_BASIC</property>
        </properties>
      </channel>
      <channel id="sensor_binary" typeId="sensor_binary">
        <label>Binary Sensor</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SENSOR_BINARY</property>
        </properties>
      </channel>
      <channel id="meter_watts" typeId="meter_watts">
        <label>Electric meter (watts)</label>
        <properties>
          <property name="binding:*:DecimalType">COMMAND_CLASS_METER;type=E_W</property>
        </properties>
      </channel>
      <channel id="meter_kwh" typeId="meter_kwh">
        <label>Electric meter (kWh)</label>
        <properties>
          <property name="binding:*:DecimalType">COMMAND_CLASS_METER;type=E_KWh</property>
        </properties>
      </channel>
      <channel id="alarm_power" typeId="alarm_power">
        <label>Alarm (power)</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_ALARM;type=POWER_MANAGEMENT</property>
        </properties>
      </channel>
      <channel id="switch_binary1" typeId="switch_binary">
        <label>Switch 1</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SWITCH_BINARY:1,COMMAND_CLASS_BASIC:1</property>
        </properties>
      </channel>
      <channel id="meter_watts1" typeId="meter_watts">
        <label>Electric meter (watts) 1</label>
        <properties>
          <property name="binding:*:DecimalType">COMMAND_CLASS_METER:1;type=E_W</property>
        </properties>
      </channel>
      <channel id="meter_kwh1" typeId="meter_kwh">
        <label>Electric meter (kWh) 1</label>
        <properties>
          <property name="binding:*:DecimalType">COMMAND_CLASS_METER:1;type=E_KWh</property>
        </properties>
      </channel>
      <channel id="sensor_binary2" typeId="sensor_binary">
        <label>Binary Sensor I2</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SENSOR_BINARY:2,COMMAND_CLASS_BASIC:2</property>
        </properties>
      </channel>
      <channel id="sensor_temperature2" typeId="sensor_temperature">
        <label>Sensor (temperature)</label>
        <properties>
          <property name="binding:*:QuantityType">COMMAND_CLASS_SENSOR_MULTILEVEL:2;type=TEMPERATURE</property>
        </properties>
      </channel>
      <channel id="alarm_power2" typeId="alarm_power">
        <label>Alarm (power) 2</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_ALARM:2;type=POWER_MANAGEMENT</property>
        </properties>
      </channel>
      <channel id="sensor_binary3" typeId="sensor_binary">
        <label>Binary Sensor I3</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SENSOR_BINARY:3,COMMAND_CLASS_BASIC:3</property>
        </properties>
      </channel>
      <channel id="sensor_temperature3" typeId="sensor_temperature">
        <label>Sensor (temperature)</label>
        <properties>
          <property name="binding:*:QuantityType">COMMAND_CLASS_SENSOR_MULTILEVEL:3;type=TEMPERATURE</property>
        </properties>
      </channel>
      <channel id="sensor_temperature4" typeId="sensor_temperature">
        <label>Sensor (temperature)</label>
        <properties>
          <property name="binding:*:QuantityType">COMMAND_CLASS_SENSOR_MULTILEVEL:4;type=TEMPERATURE</property>
        </properties>
      </channel>
    </channels>

    <!-- DEVICE PROPERTY DEFINITIONS -->
    <properties>
      <property name="vendor">Goap</property>
      <property name="modelId">ZMNHAD</property>
      <property name="manufacturerId">0159</property>
      <property name="manufacturerRef">0002:0052</property>
      <property name="dbReference">206</property>
      <property name="defaultAssociations">1</property>
    </properties>

    <!-- CONFIGURATION DESCRIPTIONS -->
    <config-description>

      <!-- GROUP DEFINITIONS -->
      <parameter-group name="configuration">
        <context>setup</context>
        <label>Configuration Parameters</label>
      </parameter-group>

      <parameter-group name="association">
        <context>link</context>
        <label>Association Groups</label>
      </parameter-group>

      <!-- PARAMETER DEFINITIONS -->
      <parameter name="config_1_1" type="integer" groupName="configuration">
        <label>1: Input 1 switch type</label>
        <description>Input 1 switch type</description>
        <default>1</default>
        <options>
          <option value="0">mono-stable switch type (push button)</option>
          <option value="1">bi-stable switch type</option>
        </options>
      </parameter>

      <parameter name="config_2_1" type="integer" groupName="configuration">
        <label>2: Input 2 contact type</label>
        <description>Input 2 contact type</description>
        <default>0</default>
        <options>
          <option value="0">NO (normaly open) input type</option>
          <option value="1">NC (normaly close) input type</option>
        </options>
      </parameter>

      <parameter name="config_3_1" type="integer" groupName="configuration">
        <label>3: Input 3 contact type</label>
        <description>Input 3 contact type</description>
        <default>0</default>
        <options>
          <option value="0">NO (normaly open) input type</option>
          <option value="1">NC (normaly close) input type</option>
        </options>
      </parameter>

      <parameter name="config_10_1" type="integer" groupName="configuration">
        <label>10: Activate /deactivate ALL ON/ALL OFF</label>
        <description>module responds to commands ALL ON / ALL OFF</description>
        <default>255</default>
        <options>
          <option value="0">ALL ON is not active ALL OFF is not active</option>
          <option value="1">ALL ON is not active ALL OFF active</option>
          <option value="2">ALL ON active ALL OFF is not active</option>
          <option value="255">ALL ON active, ALL OFF active</option>
        </options>
      </parameter>

      <parameter name="config_11_2" type="integer" groupName="configuration"
                 min="0" max="32535">
        <label>11: Automatic turning off relay after set time</label>
        <description><![CDATA[
When relay goes automatically OFF after this time<br /><h1>Overview</h1><p>When relay is ON it goes automatically OFF after time defined by this parameter. Timer is reset to zero each time the module receive ON command regardless from where it comes (push button, associated module, controller,..)</p> <ul><li>0 = disabled</li> <li>1 - 32535 = time in units determined by parameter 15</li> </ul>
        ]]></description>
        <default>0</default>
      </parameter>

      <parameter name="config_12_2" type="integer" groupName="configuration"
                 min="0" max="32535">
        <label>12: Automatic turning on relay after set time</label>
        <description><![CDATA[
When relay goes automatically ON after this time<br /><h1>Overview</h1><p>When relay is OFF it goes automatically ON after time defined by this parameter.Timer is reset to zero each time the module receive OFF command regardless from where it comes(push button, associated module, controller,..</p> <ul><li>0 - Auto ON disabled</li> <li>1 - 32535 time in units determined by parameter 15</li> </ul>
        ]]></description>
        <default>0</default>
      </parameter>

      <parameter name="config_15_1" type="integer" groupName="configuration">
        <label>15: Automatic switching units selection</label>
        <description><![CDATA[
NOTE: Parameter is the same for turning OFF or ON.<br /><h1>Overview</h1><p>Automatic turning off / on seconds or milliseconds selection</p>
        ]]></description>
        <default>0</default>
        <options>
          <option value="0">Seconds selected</option>
          <option value="1">Milliseconds selected</option>
        </options>
      </parameter>

      <parameter name="config_30_1" type="integer" groupName="configuration">
        <label>30: Save the relay state after a power failure</label>
        <description>Save the relay state after a power failure</description>
        <default>0</default>
        <options>
          <option value="0">Module saves its state before power failure</option>
          <option value="1">Module stays OFF after a power failure</option>
        </options>
      </parameter>

      <parameter name="config_40_1" type="integer" groupName="configuration"
                 min="0" max="100">
        <label>40: Power reporting in Watts on power change</label>
        <description><![CDATA[
Power reporting in Watts on power change<br /><h1>Overview</h1><ul><li>0 – Reporting Disabled</li> <li>1 – 100 = 1% - 100% Reporting enabled</li> </ul><p>Power report is send (push) only when actual power in Watts in real time change for more than set percentage comparing to previous actual power in Watts, step is 1%.</p> <p><strong>NOTE:</strong> if power changed is less than 1W, the report is not send (pushed), independent of percentage set</p>
        ]]></description>
        <default>10</default>
      </parameter>

      <parameter name="config_42_2" type="integer" groupName="configuration"
                 min="0" max="32535">
        <label>42: Power reporting in Watts by Time interval</label>
        <description><![CDATA[
Set value means time interval when power report is send<br /><h1>Overview</h1><p>Set value means time interval (0 – 32535) in seconds, when power report is send.</p> <ul><li>Default value 300 (power report in Watts is send each 300s)</li> <li>0 – Reporting Disabled</li> <li>1 – 32535 = 1second – 32535 seconds.</li> <li>Reporting enabled. Power report is send with time </li> </ul>
        ]]></description>
        <default>300</default>
      </parameter>

      <parameter name="config_63_1" type="integer" groupName="configuration">
        <label>63: Output Switch selection</label>
        <description><![CDATA[
Set the type of the device connected to the output. (NO) / (NC)<br /><h1>Overview</h1><p>Controls the active state of the output switch.</p> <ul><li> Normally Open (NO), load is not connected to power when inactive (“off”). </li> <li>Normally Closed (NC), load is connected to power when inactive (“off”), the inverse of usual operation.</li> </ul>
        ]]></description>
        <default>0</default>
        <options>
          <option value="0">Normal -NO when inactive (“off")</option>
          <option value="1">Inverse -NC when inactive (“on”)</option>
        </options>
      </parameter>

      <parameter name="config_100_1" type="integer" groupName="configuration">
        <label>100: Endpoints I2 Notification Type and Event</label>
        <description><![CDATA[
Enable / Disable Endpoints I2 or select Notification Type and Event<br /><h1>Overview</h1><p>Enabling I2 means that Endpoint (I2) will be present on UI.</p> <p>Disabling it will result in hiding the endpoint according to the parameter set value.</p> <p>Additionally, a Notification Type and Event can be selected for the endpoint. </p> <h1><strong>NOTE</strong>:</h1> <p><strong>After parameter change, module has to be re included into the network in order setting to take effect! </strong></p>
        ]]></description>
        <default>1</default>
        <options>
          <option value="0">Endpoint, I2 disabled</option>
          <option value="1">Home Security</option>
          <option value="2">Carbon Monoxide</option>
          <option value="3">Carbon Dioxide</option>
          <option value="4">Water Alarm</option>
          <option value="5">Heat Alarm</option>
          <option value="6">Smoke Alarm</option>
          <option value="9">Sensor binary.</option>
        </options>
      </parameter>

      <parameter name="config_101_1" type="integer" groupName="configuration">
        <label>101: Endpoints I3 Notification Type and Event</label>
        <description><![CDATA[
Enable / Disable Endpoints I3 or select Notification Type and Event<br /><h1>Overview</h1><p>Enabling I3 means that Endpoint (I3) will be present on UI.</p> <p>Disabling it will result in hiding the endpoint according to the parameter set value.</p> <p>Additionally, a Notification Type and Event can be selected for the endpoint</p> <h1>NOTE:</h1> <p><strong>After parameter change, module has to be re included into the network in order setting to take effect!</strong></p>
        ]]></description>
        <default>1</default>
        <options>
          <option value="0">Endpoint, I3 disabled</option>
          <option value="1">Home Security</option>
          <option value="2">Carbon Monoxide</option>
          <option value="3">Carbon Dioxide</option>
          <option value="4">Water Alarm</option>
          <option value="5">Heat Alarm</option>
          <option value="6">Smoke Alarm</option>
          <option value="9">Sensor binary.</option>
        </options>
      </parameter>

      <parameter name="config_110_2" type="integer" groupName="configuration"
                 min="0" max="65535">
        <label>110: Temperature sensor offset settings</label>
        <description><![CDATA[
Temperature sensor offset settings<br /><h1>Overview</h1><p>Set value is added or subtracted to actual measured value by sensor.</p> <ul><li> default value 32536</li> <li>32536 – offset is 0.0C - From 1 to 100–value from 0.1°C to 10.0°C is added to actual measured temperature.</li> <li>From 1001 to 1100 – value from -0.1 °C to -10.0 °C is subtracted to actual measured temperature</li> </ul>
        ]]></description>
        <default>32536</default>
      </parameter>

      <parameter name="config_120_1" type="integer" groupName="configuration"
                 min="0" max="127">
        <label>120: Digital temperature sensor reporting</label>
        <description><![CDATA[
Digital temperature sensor reporting<br /><h1>Overview</h1><p>If digital temperature sensor is connected, module reports measured temperature on temperature change defined by this parameter</p> <ul><li>default value 5 = 0,5°C</li> <li>0 – Reporting disabled</li> <li>1- 127 = 0,1°C – 12,7°C, step is 0,1°C</li> </ul>
        ]]></description>
        <default>5</default>
      </parameter>

      <!-- ASSOCIATION DEFINITIONS -->
      <parameter name="group_1" type="text" groupName="association">
        <label>1: Lifeline</label>
        <description>Lifeline group (reserved for communication with the main controller)</description>
      </parameter>

      <parameter name="group_2" type="text" groupName="association" multiple="true">
        <label>2: Basic on/off (triggered input Q state)</label>
        <description><![CDATA[
<br /><h1>Overview</h1><p>basic on/off (triggered at change of the output Q state and reflecting its state) up to 16 nodes.</p>
        ]]></description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_3" type="text" groupName="association" multiple="true">
        <label>3: Basic on/off (triggered input I2 state)</label>
        <description><![CDATA[
<br /><h1>Overview</h1><p> basic on/off (triggered at change of the input I2 state and reflecting its state) up to 16 nodes.</p>
        ]]></description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_4" type="text" groupName="association" multiple="true">
        <label>4: Notification report (triggered input I2 state)</label>
        <description><![CDATA[
<br /><h1>Overview</h1><p>Notification report (triggered at change of the input I2 state and reflecting its state) up to 16 nodes.</p>
        ]]></description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_5" type="text" groupName="association" multiple="true">
        <label>5: Binary Sensor (triggered input I2 state)</label>
        <description><![CDATA[
<br /><h1>Overview</h1><p> Binary sensor (triggered at change of the input I2 state and reflecting its state) up to 16 nodes.</p>
        ]]></description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_6" type="text" groupName="association" multiple="true">
        <label>6: Basic on/off (triggered input I3 state)</label>
        <description><![CDATA[
<br /><h1>Overview</h1><p> basic on/off (triggered at change of the input I3 state and reflecting its state) up to 16 nodes</p>
        ]]></description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_7" type="text" groupName="association" multiple="true">
        <label>7: Notification report (triggered input I3 state)</label>
        <description><![CDATA[
<br /><h1>Overview</h1><p>notification report (triggered at change of the input I3 state and reflecting its state) up to 16 nodes.</p>
        ]]></description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_8" type="text" groupName="association" multiple="true">
        <label>8: Binary Sensor report (triggered input I3 state)</label>
        <description><![CDATA[
<br /><h1>Overview</h1><p> binary sensor report (triggered at change of the input I3 state and reflecting its state) up to 16 nodes</p>
        ]]></description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_9" type="text" groupName="association" multiple="true">
        <label>9: Multilevel Sensor report (triggered temperature)</label>
        <description><![CDATA[
<br /><h1>Overview</h1><p> multilevel sensor report (triggered at change of temperature sensor) up to 16 nodes</p>
        ]]></description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <!-- STATIC DEFINITIONS -->
      <parameter name="node_id" type="integer" min="1" max="232" readOnly="true" required="true">
        <label>Node ID</label>
        <advanced>true</advanced>
      </parameter>

    </config-description>

  </thing-type>

</thing:thing-descriptions>
