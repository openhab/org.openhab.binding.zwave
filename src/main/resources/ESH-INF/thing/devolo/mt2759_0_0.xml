<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="zwave"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
  xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0
                      https://openhab.org/schemas/thing-description/v1.0.0">

  <thing-type id="devolo_mt2759_00_000" listed="false">
    <label>MT2759 Home Control Wall Mounted Switch</label>
    <description><![CDATA[
Home Control Wall Mounted Switch<br /><h1>Overview</h1><p>This Z-Wave module is used for switching on or off the electrical device (e.g. light or fan). The module operates on 868,4 MHz. The module can be controlled either through Z-wave network or through the wall switch. The module is designed to be mounted inside a “flush mounting box”, hidden behind a traditional wall switch. Module measures power consumption of electrical device and supports connection of digital temperature sensor. It is designed to act as repeater in order to improve range and stability of Z-wave network.</p> <h1>Supported switches</h1> <p>Module supports mono stable switches (push button) and bi stable switches. The module is factory set to operate with bi stable switches.</p> <br /><h2>Inclusion Information</h2><h1>Module Inclusion (Adding to Z-wave network)</h1> <ul><li>Connect module to power supply (with temperature sensor connected if purchased*),</li> <li>enable add/remove mode on main controller</li> <li>auto inclusion (works for about 2 minutes after connected to power supply) or</li> <li>press push button I1 three times within 5 s (3 times change switch state within 5 seconds) or</li> <li>press service button S (only applicable for 24 V SELVsupply voltage) for more than 2 second</li> </ul><p><br />NOTE 1: For auto inclusion procedure, first set main controller into inclusion mode and then connect module to power supply.<br />NOTE 2: When connecting temperature sensor to module that has already been included, you have to exclude module first. Switch off power supply, connect the sensor and re include the module.</p> <br /><h2>Exclusion Information</h2><p>Module Exclusion/Reset (Removing from Z-Wave network)</p> <ul><li>Connect module to power supply</li> <li>bring module within maximum 1 meter (3 feet) of the main controller,</li> <li>enable add/remove mode on main controller</li> <li>press push button I1 five times within 5 s (5 times change switch state within 5 seconds) in the first 60 seconds after the module is  connected to the power supply or</li> <li>press service button S (only applicable for 24 V SELV supply voltage) for more than 6 seconds.</li> </ul><p>By this function all parameters of the module are set to default values and own ID is deleted.</p> <p>Please use this procedure only when the network primary controller is missing or otherwise inoperable.</p> <p>If push button I1 is pressed three times within 5 s (or service button S is pressed more than 2 and less than 6 seconds) module is excluded, but configuration parameters are not set to default values.</p> <p>NOTE: If the module is included with parameters 100 or 101 with values different to default and module reset is done, wait at least 30s before next inclusion.</p>
    ]]></description>
    <category>WallSwitch</category>

    <!-- CHANNEL DEFINITIONS -->
    <channels>
      <channel id="switch_binary" typeId="switch_binary">
        <label>Switch</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SWITCH_BINARY,COMMAND_CLASS_BASIC</property>
        </properties>
      </channel>
      <channel id="sensor_binary" typeId="sensor_binary">
        <label>Binary Sensor</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SENSOR_BINARY</property>
        </properties>
      </channel>
      <channel id="meter_watts" typeId="meter_watts">
        <label>Electric meter (watts)</label>
        <properties>
          <property name="binding:*:DecimalType">COMMAND_CLASS_METER;type=E_W</property>
        </properties>
      </channel>
      <channel id="meter_kwh" typeId="meter_kwh">
        <label>Electric meter (kWh)</label>
        <properties>
          <property name="binding:*:DecimalType">COMMAND_CLASS_METER;type=E_KWh</property>
        </properties>
      </channel>
      <channel id="alarm_power" typeId="alarm_power">
        <label>Alarm (power)</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_ALARM;type=POWER_MANAGEMENT</property>
        </properties>
      </channel>
      <channel id="switch_binary1" typeId="switch_binary">
        <label>Switch 1</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SWITCH_BINARY:1,COMMAND_CLASS_BASIC:1</property>
        </properties>
      </channel>
      <channel id="meter_watts1" typeId="meter_watts">
        <label>Electric meter (watts) 1</label>
        <properties>
          <property name="binding:*:DecimalType">COMMAND_CLASS_METER:1;type=E_W</property>
        </properties>
      </channel>
      <channel id="meter_kwh1" typeId="meter_kwh">
        <label>Electric meter (kWh) 1</label>
        <properties>
          <property name="binding:*:DecimalType">COMMAND_CLASS_METER:1;type=E_KWh</property>
        </properties>
      </channel>
      <channel id="alarm_power1" typeId="alarm_power">
        <label>Alarm (power) 1</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_ALARM:1;type=POWER_MANAGEMENT</property>
        </properties>
      </channel>
      <channel id="sensor_binary2" typeId="sensor_binary">
        <label>Binary Sensor 2</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SENSOR_BINARY:2,COMMAND_CLASS_BASIC:2</property>
        </properties>
      </channel>
      <channel id="alarm_burglar2" typeId="alarm_burglar">
        <label>Alarm (burglar) 2</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_ALARM:2;type=BURGLAR</property>
        </properties>
      </channel>
      <channel id="sensor_binary3" typeId="sensor_binary">
        <label>Binary Sensor 3</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_SENSOR_BINARY:3,COMMAND_CLASS_BASIC:3</property>
        </properties>
      </channel>
      <channel id="alarm_burglar3" typeId="alarm_burglar">
        <label>Alarm (burglar) 3</label>
        <properties>
          <property name="binding:*:OnOffType">COMMAND_CLASS_ALARM:3;type=BURGLAR</property>
        </properties>
      </channel>
    </channels>

    <!-- DEVICE PROPERTY DEFINITIONS -->
    <properties>
      <property name="vendor">Devolo</property>
      <property name="modelId">MT2759</property>
      <property name="manufacturerId">0175</property>
      <property name="manufacturerRef">0002:0052</property>
      <property name="dbReference">1107</property>
      <property name="defaultAssociations">1</property>
    </properties>

    <!-- CONFIGURATION DESCRIPTIONS -->
    <config-description>

      <!-- GROUP DEFINITIONS -->
      <parameter-group name="configuration">
        <context>setup</context>
        <label>Configuration Parameters</label>
      </parameter-group>

      <parameter-group name="association">
        <context>link</context>
        <label>Association Groups</label>
      </parameter-group>

      <!-- PARAMETER DEFINITIONS -->
      <parameter name="config_1_1" type="integer" groupName="configuration">
        <label>1: (I1) Input 1 switch type</label>
        <description><![CDATA[
(I1) Input 1 switch type<br /><h1>Overview</h1><table><tr><td>Values</td> <td>Description</td> </tr><tr><td>0</td> <td>mono stable switch type (push button)</td> </tr><tr><td>1</td> <td>bi stable switch type (default)</td> </tr></table>
        ]]></description>
        <default>1</default>
        <options>
          <option value="0">mono stable switch type (push button)</option>
          <option value="1">bi-stable switch type (default)</option>
        </options>
      </parameter>

      <parameter name="config_2_1" type="integer" groupName="configuration">
        <label>2: (I2) Input 2 contact type</label>
        <description>(I2) Input 2 contact type</description>
        <default>0</default>
        <options>
          <option value="0">NO (normally open) input type (default)</option>
          <option value="1">NC (normally close) input type</option>
        </options>
      </parameter>

      <parameter name="config_3_1" type="integer" groupName="configuration">
        <label>3: (I3) Input 3 contact type</label>
        <description>(I3) Input 3 contact type</description>
        <default>0</default>
        <options>
          <option value="0">NO (normally open) input type (default)</option>
          <option value="1">NC (normally close) input type</option>
        </options>
      </parameter>

      <parameter name="config_10_1" type="integer" groupName="configuration">
        <label>10: ALL ON/ALL OFF</label>
        <description><![CDATA[
Activate / deactivate functions ALL ON/ALL OFF<br /><h1>Overview</h1><p>HC Switch relay module responds to commands ALL ON / ALL OFF that may be sent by the main controller or by other controller belonging to the system.</p>
        ]]></description>
        <default>255</default>
        <options>
          <option value="0">NONE</option>
          <option value="1">ALL OFF</option>
          <option value="2">ALL ON</option>
          <option value="255">ALL ON / ALL OFF (Default)</option>
        </options>
      </parameter>

      <parameter name="config_11_2" type="integer" groupName="configuration"
                 min="0" max="32535">
        <label>11: Automatic turning off</label>
        <description><![CDATA[
Automatic turning off output after set time<br /><h1>Overview</h1><p>When relay is ON it goes automatically OFF after time defined by this parameter. Timer is reset to zero each time the module receive ON command regardless from where it comes (push button, associated module, controller,..).</p> <ul><li>default value 0</li> <li>0 = Auto OFF disabled</li> <li>1 - 32535 = 1 second (0,01s) - 32535 seconds (325,35s)</li> </ul><p>Auto OFF enabled with define time, step is 1s or 10ms according to parameter nr. 15.</p>
        ]]></description>
        <default>0</default>
        <options>
          <option value="0">AUTO OFF disabled</option>
        </options>
        <limitToOptions>false</limitToOptions>
      </parameter>

      <parameter name="config_12_2" type="integer" groupName="configuration"
                 min="0" max="32535">
        <label>12: Automatic turning on</label>
        <description><![CDATA[
Automatic turning on output after set time<br /><h1>Overview</h1><p>When relay is OFF it goes automatically ON after time defined by this parameter. Timer is reset to zero each time the module receive OFF command regardless from where it come s (push button, associated module, controller,..).</p> <p>Available configuration parameters (data type is 2 Byte DEC):</p> <ul><li>default value 0</li> <li>0 Auto ON disabled</li> <li>1 32535 = 1second (0,01s) 32536 seconds (325,35s)</li> </ul><p>Auto ON enabled with define time, step is 1s or 10m s according to parameter nr. 15.</p>
        ]]></description>
        <default>0</default>
        <options>
          <option value="0">AUTO ON disabled</option>
        </options>
        <limitToOptions>false</limitToOptions>
      </parameter>

      <parameter name="config_15_1" type="integer" groupName="configuration">
        <label>15: Auto off / on, s or ms selection</label>
        <description><![CDATA[
Automatic turning off / on seconds or milliseconds selection<br /><h1>Overview</h1><p>NOTE: Parameter is the same for turning OFF or ON.</p>
        ]]></description>
        <default>0</default>
        <options>
          <option value="0">seconds selected (default)</option>
          <option value="1">milliseconds selected</option>
        </options>
      </parameter>

      <parameter name="config_30_1" type="integer" groupName="configuration">
        <label>30: Saving the state</label>
        <description>Saving the state of the relay after a power failure</description>
        <default>0</default>
        <options>
          <option value="0">HC Switch relay module saves its state</option>
          <option value="1">HC Switch relay module returns to "off" position</option>
        </options>
      </parameter>

      <parameter name="config_40_1" type="integer" groupName="configuration"
                 min="0" max="100">
        <label>40: Power reporting (W) on power change</label>
        <description><![CDATA[
Power reporting in Watts on power change<br /><h1>Overview</h1><p>Set value means percentage, set value from 0 - 100 = 0% - 100%. Available configuration parameters (data type is 1 Byte DEC):</p> <ul><li>default value 10 = 10%</li> <li>0 = reporting disabled</li> <li>1-100 = 1% - 100% reporting enabled</li> </ul><p>Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts , step is When using low power loads, It is recommended to set parameter no. 40 to a higher value (e.g. 50%).</p> <p>NOTE: if power changed is less than 1W, the report is not send (pushed), independent of percentage set.</p>
        ]]></description>
        <default>10</default>
        <options>
          <option value="0">Reporting disabled</option>
        </options>
        <limitToOptions>false</limitToOptions>
      </parameter>

      <parameter name="config_42_2" type="integer" groupName="configuration"
                 min="0" max="32535">
        <label>42: Power reporting (W) by time interval</label>
        <description><![CDATA[
Power reporting in Watts by time interval<br /><h1>Overview</h1><p>Set value means time interval (0 - 32535) in seconds, when power report is send. Available configuration parameters (data type is 2 Byte DEC):</p> <ul><li>default value 300 = 300s</li> <li>0 reporting disabled</li> <li>30-32535 = 30 seconds - 32535 seconds. Reporting enabled. <br />Power report is send with time interval set by entered value.</li> </ul>
        ]]></description>
        <default>300</default>
        <options>
          <option value="0">Reporting disabled</option>
        </options>
        <limitToOptions>false</limitToOptions>
      </parameter>

      <parameter name="config_63_1" type="integer" groupName="configuration">
        <label>63: Output Switch selection</label>
        <description><![CDATA[
Output Switch selection<br /><h1>Overview</h1><p>Set value means the type of the device that is connected to the output. The device type can be normally open (NO) or normally close (NC).</p>
        ]]></description>
        <default>0</default>
        <options>
          <option value="0">(NC) output is 0V (default)</option>
          <option value="1">(NO) output is 230V / 24V</option>
        </options>
      </parameter>

      <parameter name="config_100_1" type="integer" groupName="configuration">
        <label>100: Enable / Disable Endpoint I2</label>
        <description><![CDATA[
Enable / Disable Endpoint I2 or select Notification Type and Event<br /><h1>Overview</h1><h1>Enable / Disable Endpoint I2 or select Notification Type and Event</h1> <p>Enabling I2 means that Endpoint (I2) will be present on UI. Disabling it will result in hiding the endpoint according to the parameter set value. Additionally, a Notification Type and Event can be selected for the endpoint. Available configuration parameters (data type is 1 Byte DEC):</p> <h2>Endpoint device type selection:</h2> <p>notification sensor (1-6):</p> <p>GENERIC_TYPE_SENSOR_NOTIFICATION, SPECIFIC_TYPE_NOTIFICATION_SENSOR</p> <table><tr><td>Values</td> <td>Description</td> </tr><tr><td>1</td> <td>Home Security: Motion Detection, unknown loc. (Default)</td> </tr><tr><td>2</td> <td>Carbon Monoxide; Carbon Monoxide detected, unknown location.</td> </tr><tr><td>3</td> <td>Carbon Dioxide; Carbon Dioxide detected, unknown location.</td> </tr><tr><td>4</td> <td>Water Alarm; Water Leak detected, unknown loc.</td> </tr><tr><td>5</td> <td>Heat Alarm; Overheat detected, unknown loc.</td> </tr><tr><td>6</td> <td>Smoke Alarm; Smoke detected, unknown loc.</td> </tr><tr><td>0</td> <td>Endpoint I2 disabled</td> </tr></table><p>binary sensor (9):</p> <p>GENERIC_TYPE_SENSOR_BINARY, SPECIFIC_TYPE_NOT_USED</p> <p>NOTE 1 : After parameter change, first exclude module (without setting parameters to default value) then wait at least 30s and then re include the module!</p> <p>NOTE 2: If parameter is set to value 9, the messages will be sent to Home Security!</p>
        ]]></description>
        <default>1</default>
        <options>
          <option value="0">Endpoint I2 disabled</option>
          <option value="1">Home Security: Motion Detection</option>
          <option value="2">Carbon Monoxide</option>
          <option value="3">Carbon Dioxide</option>
          <option value="4">Water Alarm</option>
          <option value="5">Heat Alarm</option>
          <option value="6">Smoke Alarm</option>
        </options>
      </parameter>

      <parameter name="config_101_1" type="integer" groupName="configuration">
        <label>101: Enable / Disable Endpoint I3</label>
        <description><![CDATA[
Enable / Disable Endpoint I3 or select Notification Type and Event<br /><h1>Overview</h1><h1>Enable / Disable Endpoint I3 or select Notification Type and Event</h1> <p>Enabling I3 means that Endpoint (I3) will be present on UI. Disabling it will result in hiding the endpoint according to the parameter set value. Additionally, a Notification Type and Event can be selected for the endpoint. Available configuration parameters (data type is 1 Byte DEC):</p> <h2>Endpoint device type selection:</h2> <p>notification sensor (1-6):</p> <p>GENERIC_TYPE_SENSOR_NOTIFICATION, SPECIFIC_TYPE_NOTIFICATION_SENSOR</p> <table><tr><td>Values</td> <td>Description</td> </tr><tr><td>1</td> <td>Home Security: Motion Detection, unknown loc. (Default)</td> </tr><tr><td>2</td> <td>Carbon Monoxide; Carbon Monoxide detected, unknown location.</td> </tr><tr><td>3</td> <td>Carbon Dioxide; Carbon Dioxide detected, unknown location.</td> </tr><tr><td>4</td> <td>Water Alarm; Water Leak detected, unknown loc.</td> </tr><tr><td>5</td> <td>Heat Alarm; Overheat detected, unknown loc.</td> </tr><tr><td>6</td> <td>Smoke Alarm; Smoke detected, unknown loc.</td> </tr><tr><td>0</td> <td>Endpoint I3 disabled</td> </tr></table><p>binary sensor (9):</p> <p>GENERIC_TYPE_SENSOR_BINARY, SPECIFIC_TYPE_NOT_USED</p> <p>NOTE 1 : After parameter change, first exclude module (without setting parameters to default value) then wait at least 30s and then re include the module!</p> <p>NOTE 2: If parameter is set to value 9, the messages will be sent to Home Security!</p>
        ]]></description>
        <default>1</default>
        <options>
          <option value="0">Endpoint I3 disabled</option>
          <option value="1">Home Security: Motion Detection (Default)</option>
          <option value="2">Carbon Monoxide</option>
          <option value="3">Carbon Dioxide</option>
          <option value="4">Water Alarm</option>
          <option value="5">Heat Alarm</option>
          <option value="6">Smoke Alarm</option>
        </options>
      </parameter>

      <parameter name="config_110_2" type="integer" groupName="configuration"
                 min="1" max="32536">
        <label>110: Temperature sensor offset settings</label>
        <description><![CDATA[
Temperature sensor offset settings<br /><h1>Overview</h1><p>Set value is added or subtracted to actual measured value by sensor. Available configuration parameters (data type is 2 Byte DEC):</p> <table><tr><td>Values</td> <td>Description</td> </tr><tr><td>32536</td> <td> is 0.0C (Default)</td> </tr><tr><td>1 –100</td> <td>From 1 to 100 value from 0.1°C to 10.0°C is added to actual measured temperature.</td> </tr><tr><td>1001 –1100</td> <td>From 1001 to 1100 value from 0.1 °C to 10.0 °C is subtracted to actual measured temperature.</td> </tr></table>
        ]]></description>
        <default>32536</default>
        <limitToOptions>false</limitToOptions>
      </parameter>

      <parameter name="config_120_1" type="integer" groupName="configuration"
                 min="0" max="127">
        <label>120: Temperature sensor reporting</label>
        <description><![CDATA[
Temperature sensor reporting<br /><h1>Overview</h1><p>If digital temperature sensor is connected, module reports measured temperature on temperature change defined by this parameter. Available configuration parameters (data type is 1 Byte DEC):</p> <table><tr><td>Values</td> <td>Description</td> </tr><tr><td>5</td> <td>0,5°C (default)</td> </tr><tr><td>0</td> <td>Reporting disabled</td> </tr><tr><td>1 –127</td> <td>0,1°C - 12,7°C, step is 0,1°C</td> </tr></table>
        ]]></description>
        <default>5</default>
        <limitToOptions>false</limitToOptions>
      </parameter>

      <!-- ASSOCIATION DEFINITIONS -->
      <parameter name="group_1" type="text" groupName="association">
        <label>1: Lifeline</label>
        <description>Lifeline group (reserved for communication with the main controller), 1 node allowed.</description>
      </parameter>

      <parameter name="group_2" type="text" groupName="association" multiple="true">
        <label>2: Basic On/Off I1</label>
        <description>basic on/off (triggered at change of the output Q state and reflecting its state) up to 16 nodes.</description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_3" type="text" groupName="association" multiple="true">
        <label>3: Basic On/Off I2</label>
        <description>basic on/off (triggered at change of the input I2 state and reflecting its state) up to 16 nodes.</description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_4" type="text" groupName="association" multiple="true">
        <label>4: Reporting I2</label>
        <description>Notification report (triggered at change of the input I2 state and reflecting its state) up to 16 nodes.</description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_5" type="text" groupName="association" multiple="true">
        <label>5: Binary Sensor Report I2</label>
        <description>Binary sensor (triggered at change of the input I2 state and reflecting its state) up to 16 nodes.</description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_6" type="text" groupName="association" multiple="true">
        <label>6: Basic On/Off I3</label>
        <description>basic on/off (triggered at change of the input I3 state an d reflecting its state) up to 16 nodes.</description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_7" type="text" groupName="association" multiple="true">
        <label>7: Reporting I3</label>
        <description>notification report (triggered at change of the input I3 state and reflecting its state) up to 16 nodes.</description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_8" type="text" groupName="association" multiple="true">
        <label>8: Binary Sensor Report I3</label>
        <description>binary sensor report (triggered at change of the input I3 state and reflecting its state) up to 16 nodes.</description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <parameter name="group_9" type="text" groupName="association" multiple="true">
        <label>9: Multi-Level Sensor Reporting</label>
        <description>multilevel sensor report (triggered at change of temperature sensor) up to 16 nodes.</description>
        <multipleLimit>16</multipleLimit>
      </parameter>

      <!-- STATIC DEFINITIONS -->
      <parameter name="node_id" type="integer" min="1" max="232" readOnly="true" required="true">
        <label>Node ID</label>
        <advanced>true</advanced>
      </parameter>

    </config-description>

  </thing-type>

</thing:thing-descriptions>
